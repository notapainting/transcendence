input {
  # file {
  #   #https://www.elastic.co/guide/en/logstash/current/plugins-inputs-file.html
  #   #default is TAIL which assumes more data will come into the file.
  #   #change to mode => "read" if the file is a compelte file.  by default, the file will be removed once reading is complete -- backup your files if you need them.
  #   mode => "read"
  #   path => "/usr/share/logstash/ingest_data/*"
  #   exit_after_read => true # this tells logstash to exit after reading the file.  This is useful for running logstash as a "job". if you want logstash to continue to run and monitor for files, remove this line.
  #   file_completed_action => "log" # this tells logstash to log to the file specified in file_completed_log_path once its done reading the input file.
  #   file_completed_log_path => "/usr/share/logstash/ingest_data/logstash_completed.log"
  #   type => "test"
  # }
  # file {
  #   mode => "tail"
  #   path => "/var/log/nginx/nginx.server.log"  # Chemin vers les logs d'accès Nginx
  #   file_completed_action => "log" # this tells logstash to log to the file specified in file_completed_log_path once its done reading the input file.
  #   file_completed_log_path => "/usr/share/logstash/ingest_data/logstash_completed.log"  # Chemin pour stocker la position de lecture
  #   type => "nginx_access"  # Ajoute un type pour filtrer plus facilement les événements
  # }
  file {
    mode => "tail"
    path => "/usr/share/logstash/nginx_logs/*.log"
    file_completed_action => "log"
    file_completed_log_path => "/usr/share/logstash/ingest_data/nginx_logstash_completed.log"
    type => "nginx_access"
    # start_position => "beginning"
    # sincedb_path => "/dev/null"
  }
  # syslog {
  #    host => "0.0.0.0"
  #    port => 5140
  #    type => "nginx_access"
  # }
}

filter {
  # if [type] == "nginx_access" {
  #   grok {
  #     match => { "message" => "%{IPORHOST:client_ip} - %{USER:remote_user} \[%{HTTPDATE:timestamp}\] \"%{WORD:method} %{URIPATHPARAM:request} HTTP/%{NUMBER:http_version}\" %{NUMBER:response_code} (?:%{NUMBER:body_bytes_sent}|-) \"%{DATA:referrer}\" \"%{DATA:user_agent}\"" }
  #   }
  #   date {
  #     match => [ "timestamp", "dd/MMM/YYYY:HH:mm:ss Z" ]
  #     target => "@timestamp"
  #   }
  #   geoip {
  #     source => "client_ip"
  #   }
  # }
}

# output {
#   elasticsearch {
#     index => "logstash-%{+YYYY.MM.dd}"

#     hosts => "${ELASTIC_HOSTS}"
#     user => "${ELASTIC_USER}"
#     password => "${ELASTIC_PASSWORD}"

#     ssl_enabled => true
#     ssl_certificate_authorities => ["certs/ca/ca.crt"]
#     ssl_certificate => "certs/logstash/logstash.crt"
#     ssl_key => "certs/logstash/logstash.pkcs8.key"
#   }
#   stdout {}
# }

output {
  elasticsearch {
    index => "nginx_access-%{+YYYY.MM.dd}"

    hosts => "${ELASTIC_HOSTS}"
    user => "${ELASTIC_USER}"
    password => "${ELASTIC_PASSWORD}"

    ssl_enabled => true
    ssl_certificate_authorities => ["certs/ca/ca.crt"]
    ssl_certificate => "certs/logstash/logstash.crt"
    ssl_key => "certs/logstash/logstash.pkcs8.key"
  }
}