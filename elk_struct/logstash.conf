input {
    tcp {
        host => "0.0.0.0"
        port => 5959
        type => "django"
    }
    udp {
        host => "0.0.0.0"
        port => 5959
        codec => json
        type => "django"
    }

    file {
        mode => "read"
        path => "/usr/share/logstash/ingest_data/*"
        file_completed_action => "log"
        file_completed_log_path => "/usr/share/logstash/ingest_data/logstash_completed.log"
        type => "logstash"
    }
    tcp {
        host => "0.0.0.0"
        port => 5140
        type => "syslog"
    }
    udp {
        host => "0.0.0.0"
        port => 5140
        type => "syslog"
    }
}

filter {
    # Filter pour syslog (Nginx)
    if [type] == "syslog" {
        grok {
            match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
            add_field => [ "received_at", "%{@timestamp}" ]
            add_field => [ "received_from", "%{host}" ]
            add_field => [ "template", "%{syslog_program}" ]
        }
        date {
            match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
        }
    }
    
    # Filter pour logs "logstash"
    if [type] == "logstash" {
        mutate {
            add_field => {
                "template" => "logstash"
            }
        }
    }

    # Filter pour logs Django
    if [type] == "django" {
        mutate {
            add_field => {
                "template" => "django"
            }
        }
    }
}

output {
    elasticsearch {
        index => "%{template}-%{+YYYY.MM.dd}"

        hosts=> "${ELASTIC_HOSTS}"
        user=> "${ELASTIC_USER}"
        password=> "${ELASTIC_PASSWORD}"

        ssl_enabled => true
        ssl_certificate_authorities => ["certs/ca/ca.crt"]
        ssl_certificate => "certs/logstash/logstash.crt"
        ssl_key => "certs/logstash/logstash.pkcs8.key"
    }
}
