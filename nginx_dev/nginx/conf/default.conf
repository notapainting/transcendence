# The map block set the Connection header to close when the Upgrade header in the request is set to ''
# http {
# 	map $http_upgrade $connection_upgrade {
# 		default upgrade;
# 		'' close;
# 	}

# 	upstream wsbackend {
# 		server 666.42.21.7:0000: #server to reach
# 	}

# 	upstream pong {
# 		server 666.42.21.42:0000: #server pong to reach
# 	}

	server {
		listen 80;
		error_log /etc/nginx/server.error.log;
		modsecurity on;
		modsecurity_rules_file /etc/nginx/modsec/main.conf;
		return 301 https://$host:8443$request_uri;
	}

	server {
		listen 443 ssl;
		modsecurity on;
		modsecurity_rules_file /etc/nginx/modsec/main.conf;

		root /var/www/trmdr.com; #temporary

		ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt; #temporary
		ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key; #temporary

		error_log	/etc/nginx/server.error.log;

		index index.html; #temporary
		server_name trmdr.com www.trmdr.com;

		location / { #temporary
			try_files $uri $uri/ =404;
		}

# NGINX supports WebSocket by allowing a tunnel to be set up between a client and a backend server.
		# location /pong {
		# 	proxy_pass https://127.0.0.1:443/pong;
		# proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		# proxy_set_header Host $host;

#proxy_set_header directives enable NGINX to properly handle the WebSocket protocol.
		# proxy_http_version 1.1;
		# proxy_set_header Upgrade $http_upgrade;
		# proxy_set_header Connection "Upgrade";
		# }

		# location /wsapp/ {
		# proxy_pass http://wsbackend;
		# proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		# proxy_set_header Host $host;

		# proxy_http_version 1.1;
		# proxy_set_header Upgrade $http_upgrade;
		# proxy_set_header Connection "Upgrade";
		# }
	}
# }

# nginx version: nginx/1.18.0 (Ubuntu)
# log nginx ???