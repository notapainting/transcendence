# The map block sets the Connection header to close when the Upgrade header in the request is set to ''
map $http_upgrade $connection_upgrade
{
	default upgrade;
	'' close;
}

# HTTP to HTTPS redirection server
server 
{
	listen		80;
	listen		[::]:80;

	return 301 https://$host:8443$request_uri;
}

# Main server
server 
{
	listen		443 ssl;
	listen		[::]:443 ssl;
	ssl_certificate		/certs/nginx-selfsigned.crt;
	ssl_certificate_key	/certs/nginx-selfsigned.key;

	error_log	/var/log/nginx/nginx.server.log info;

	# Root location, send static file
	location / {
		root /var/www/static/;
		index index.html;
		try_files $uri $uri/ /index.html;
		include /etc/nginx/mime.types;
	}

	# Proxy for auth service
	location /auth/ {
		proxy_pass http://auth-service:8000;
		proxy_http_version 1.1;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $host;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "Upgrade";
        # proxy_cookie_path / "/; HttpOnly"; # Transmet les cookies avec l'attribut HttpOnly
	}

	# Proxy for media service
	location /media/ {
		proxy_pass http://user-managment:8000;
		proxy_http_version 1.1;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $host;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "Upgrade";
        # proxy_cookie_path / "/; HttpOnly"; # Transmet les cookies avec l'attribut HttpOnly
	}
}

	location /ws/chat/ {
		proxy_pass http://chat:8000;

		proxy_http_version 1.1;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $host;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "Upgrade";
	}