# Nginx configuration for both HTTP and SSL

server_tokens ${SERVER_TOKENS};

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
    listen 8080 default_server;
    listen [::]:8080 default_server;

    server_name _;


    PROXY_SSL_CONFIG
    set $upstream ${BACKEND};

    location / {
        client_max_body_size 0;
        return 301 https://$host$request_uri;
    
        index index.html index.htm;
        root /usr/share/nginx/html;
    }

    include includes/location_common.conf;

}

server {
    listen ${SSL_PORT} ssl;

    server_name ${SERVER_NAME};

    ssl_certificate ${SSL_CERT};
    ssl_certificate_key ${SSL_CERT_KEY};
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;
    ssl_session_tickets off;

    ssl_dhparam /etc/ssl/certs/dhparam-${SSL_DH_BITS}.pem;

    ssl_protocols ${SSL_PROTOCOLS};
    ssl_ciphers ${SSL_CIPHERS};
    ssl_prefer_server_ciphers ${SSL_PREFER_CIPHERS};

    ssl_stapling ${SSL_OCSP_STAPLING};
    ssl_stapling_verify ${SSL_OCSP_STAPLING};

    ssl_verify_client ${SSL_VERIFY};
    ssl_verify_depth ${SSL_VERIFY_DEPTH};

    PROXY_SSL_CONFIG

    # static files 
    location / {
        limit_except GET {
            deny all;
        }

        client_max_body_size 0;

        index index.html index.htm;
        try_files $uri $uri/ /index.html;

        root /usr/share/nginx/html;        
    }

    # API location
	location /auth/ {
		proxy_pass http://auth:8000;
        include includes/proxy_backend.conf;
	}

	location /media/ {
		proxy_pass http://user:8000;
        include includes/proxy_backend.conf;
	}

    location /chat/ {
		proxy_pass http://chat:8000;
        include includes/proxy_backend.conf;
	}

    location /game/ {
		proxy_pass http://game:8000;
        include includes/proxy_backend.conf;
	}
  
    location /user/ {
		proxy_pass http://user:8000;
        include includes/proxy_backend.conf;
	}

    include includes/location_common.conf;
}
