images 
- django dev : 1 volume : vscode sur host, shell dans container
file arch : 
at first
	django/ 
		--src/				empty
		--.dockerignore
		--Dockerfile
		--requirements.txt



set via env: app_name, db_app_name, port, entrypoint, network

see if compose via multiple file

check how to parameter postgres

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'postgres',
        'USER': 'postgras',
        'PASSWORD': 'password',
        'HOST': 'postgres',
        'PORT': 5432,
    }
}

DJANGO_ALLOWED_HOSTS='*'
DATABASE_ENGINE=postgresql_psycopg2
DATABASE_NAME=
DATABASE_USERNAME=
DATABASE_PASSWORD=
DATABASE_HOST=
DATABASE_PORT=


docker inspect \
  -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' container_name_or_id


healthcheck:
       test: ["CMD-SHELL", "pg_isready -U postgres"]
       interval: 5s
       timeout: 5s
       retries: 5


DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "OPTIONS": {
            "service": "my_service",
            "passfile": ".my_pgpass",
        },
    }
}

(file)

my_service :
[my_service]
host=localhost
user=USER
dbname=NAME
port=5432

.my_pass:
localhost:5432:NAME:USER:PASSWORD

postgres cheatsheet :

lists user : \du
list db : \l
connect db : \c <db_name>
\conninfo
drop == delete

db init : django need a user with a pword 


django -> use db 
db has : a role for django + a db for django 

add a "common error" section and tl;dr 

https://stackoverflow.com/questions/26598738/how-to-create-user-database-in-script-for-docker-postgres#26599273

# RUN export PGDATA=${PGDIR}
# RUN echo >> ${PGDIR}/postgresql.conf "port = "${PORT}
# COPY pg_hba.conf ${PGDIR}/pg_hba.conf

# USER postgres
# RUN export PGDATA=${PGDIR}

# USER postgres
# RUN /usr/lib/postgresql/15/bin/pg_ctl reload
# listen_addresses = '*'


# from debian:bookworm-slim
# apt update -y && apt upgrade -y
# apt install -y vim curl git man less systemctl postgresql-15 postgresql-contrib-15

# bash -c "$(curl -fsSL https://raw.githubusercontent.com/ohmybash/oh-my-bash/master/tools/install.sh)"
# conf
# pg_hba.conf -> auth 
# e PGDATA=/var/lib/postgresql/data/pgdata
# /usr/lib/postgresql/15/bin/pg_ctl

# pg_ctl -> 
# postgres@6139b07c1525:~$ /usr/lib/postgresql/15/bin/pg_ctl --help
# pg_ctl is a utility to initialize, start, stop, or control a PostgreSQL server.

# Usage:
#   pg_ctl init[db]   [-D DATADIR] [-s] [-o OPTIONS]
#   pg_ctl start      [-D DATADIR] [-l FILENAME] [-W] [-t SECS] [-s]
#                     [-o OPTIONS] [-p PATH] [-c]
#   pg_ctl stop       [-D DATADIR] [-m SHUTDOWN-MODE] [-W] [-t SECS] [-s]
#   pg_ctl restart    [-D DATADIR] [-m SHUTDOWN-MODE] [-W] [-t SECS] [-s]
#                     [-o OPTIONS] [-c]
#   pg_ctl reload     [-D DATADIR] [-s]
#   pg_ctl status     [-D DATADIR]
#   pg_ctl promote    [-D DATADIR] [-W] [-t SECS] [-s]
#   pg_ctl logrotate  [-D DATADIR] [-s]
#   pg_ctl kill       SIGNALNAME PID

# Common options:
#   -D, --pgdata=DATADIR   location of the database storage area
#   -s, --silent           only print errors, no informational messages
#   -t, --timeout=SECS     seconds to wait when using -w option
#   -V, --version          output version information, then exit
#   -w, --wait             wait until operation completes (default)
#   -W, --no-wait          do not wait until operation completes
#   -?, --help             show this help, then exit
# If the -D option is omitted, the environment variable PGDATA is used.

# Options for start or restart:
#   -c, --core-files       allow postgres to produce core files
#   -l, --log=FILENAME     write (or append) server log to FILENAME
#   -o, --options=OPTIONS  command line options to pass to postgres
#                          (PostgreSQL server executable) or initdb
#   -p PATH-TO-POSTGRES    normally not necessary

# Options for stop or restart:
#   -m, --mode=MODE        MODE can be "smart", "fast", or "immediate"

# Shutdown modes are:
#   smart       quit after all clients have disconnected
#   fast        quit directly, with proper shutdown (default)
#   immediate   quit without complete shutdown; will lead to recovery on restart

# Allowed signal names for kill:
#   ABRT HUP INT KILL QUIT TERM USR1 USR2
