DISCLAIMER:
	- This base container is for development, not production !
	- This base container isn't connected to our global app Docker network, 
		therefore it isn't ready to be used with other container

NOTE:
	- django/src/ is a mountpoint for a Docker volume, in short it's where you put your source code
	- If you are running Docker as root, every file you create inside (example: with init alias)
		will not be accessible writable outside (aka with vscode),
		in this case just chmod 777 all your file from the container
	- You'll use vscode on your host for editting source code and the container as a shell

HOW TO USE:
	- First copy this directory and rename it with your app name
	- Fill env.example with desired data
	- Build your image with make Build
	- Use make enter to launch the container and start a bash shell inside
	- You can use make down/up to stop/start the container

CONTAINER SHELL:
	- There is a fews alias to help you develop your app, try 'help'

DJANGO SETTINGS:
	- Template for databse settings:

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'postgres',
        'USER': 'postgres',
        'PASSWORD': 'password',
        'HOST': 'postgres',
        'PORT': 5432,
    }
}

The 'NAME' field is supposed to be the same as POSTGRES_DB in env.example but for now just ignore it and put POSTGRES_USER insteed


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.getenv('POSTGRES_DB'),
        'USER': os.getenv('POSTGRES_USER'),
        'PASSWORD': os.getenv('POSTGRES_PASSWORD'),
        'HOST': os.getenv('DB_HOST'),
        'PORT': os.getenv('DB_PORT'),
    }
}

'ENGINE': 'django.db.backends.postgresql'

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "OPTIONS": {
            "service": "my_service",
            "passfile": ".my_pgpass",
        },
    }
}

(file)

my_service :
[my_service]
host=localhost
user=USER
dbname=NAME
port=5432

.my_pass:
localhost:5432:NAME:USER:PASSWORD

postgres cheatsheet :

lists user : \du
list db : \l
connect db : \c <db_name>
\conninfo
drop == delete

db init : django need a user with a pword 


django -> use db 
db has : a role for django + a db for django 

add a "common error" section and tl;dr 

https://stackoverflow.com/questions/26598738/how-to-create-user-database-in-script-for-docker-postgres#26599273
