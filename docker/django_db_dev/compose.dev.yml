version: '3.9'

services:
  django:
    container_name: ${APP_NAME}
    build:
      context: django/
      dockerfile: Dockerfile.dev
    image: ${APP_NAME}_dev_image
    environment:
      APP_NAME: ${APP_NAME}
      PORT: ${APP_PORT}
      DB_USER: ${DJ_USER}
      DB_PASSWORD: ${DJ_PASSWORD}
      DB_NAME: ${DJ_DB}
      DB_HOST: ${DB_NAME}
      DB_PORT: ${DB_PORT}
    volumes:
      - source_code:/app
    ports:
      - "${APP_PORT}:${APP_PORT}"
    networks: 
      - dev_network
    restart: unless-stopped
    depends_on:
      - postgres
    stdin_open: true 
    tty: true

  postgres:
    container_name: ${DB_NAME}
    build: postgres/
    image: ${DB_NAME}_image
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: ${PGDATA}
      DB_USER: ${DJ_USER}
      DB_PASSWORD: ${DJ_PASSWORD}
      DB_NAME: ${DJ_DB}
    volumes:
      - pgdata:${PGDATA}
    networks: 
      - dev_network
    restart: unless-stopped


volumes:
  source_code:
    name: ${APP_VOLUME} 
    driver: local
    driver_opts:
      type: none
      device: django/src
      o: bind

  pgdata:
    name: ${DB_VOLUME}
    driver: local
    driver_opts:
      type: none
      device: postgres/data
      o: bind

networks:
  dev_network:
    name: dev_network
    driver: bridge

