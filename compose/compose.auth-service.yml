services:
  auth-service:
    container_name: ${AUTH}
    build:
      context: apps/${AUTH}/django/
      dockerfile: Dockerfile.dev
    image: ${AUTH}_image
    env_file:
      - env.example/${AUTH}.env.example
      - env.example/${AUTH}-common.env.example
    environment:
      - TZ=${TZ}
    volumes:
      - ${AUTH}_volume:/app
    networks:
      - app_network
    restart: unless-stopped
      # logstash01:
      #  condition: service_healthy
    depends_on:
      auth-service-db:
       condition: service_healthy
    stdin_open: true 
    tty: true
    entrypoint: ["bash", "/conf/init.sh"]


  auth-service-db:
    container_name: ${AUTH}-db
    build: apps/${AUTH}/postgres/
    image: ${AUTH}-db_image
    env_file:
      - env.example/${AUTH}-db.env.example
      - env.example/${AUTH}-common.env.example
    volumes:
      - ${AUTH}-db_volume:${PGDATA}
    networks: 
      - app_network
    restart: unless-stopped
    healthcheck:
      test: "pg_isready -U $$DB_USER -d $$DJ_DB_NAME || exit 1"
      retries: 3
      timeout: 5s
      interval: 600s
      start_period: 30s
      start_interval: 10s

volumes:
  auth-service_volume:
    name: ${AUTH}_volume
    driver: local
    driver_opts:
      type: none
      device: apps/${AUTH}/django/src
      o: bind

  auth-service-db_volume:
    name: ${AUTH}-db_volume
    driver: local
