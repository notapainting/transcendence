services:
  chat:
    container_name: ${APP_NAME_1}
    build:
      context: apps/chat/django/
      dockerfile: Dockerfile.dev
    image: ${APP_NAME_1}_image
    env_file:
      - apps/chat/app.env.example
    volumes:
      - chat_source_code:/app
    networks:
      - app_network
    ports:
      - "8000:8000"
    restart: unless-stopped
    depends_on:
      - chat-db
    stdin_open: true 
    tty: true
    # entrypoint: ["python", "/app/manage.py", "runserver", "0.0.0.0:${APP_PORT_1}"]

  chat-db:
    container_name: ${DB_NAME_1}
    build: apps/chat/postgres/
    image: ${DB_NAME_1}_image
    env_file:
      - apps/chat/app.env.example
    environment:
      PGDATA: ${PGDATA}
    volumes:
      - chat_data:${PGDATA}
    networks: 
      - app_network
    restart: unless-stopped

  chat-redis:
    container_name: chat-redis
    image: redis:7.2.4-alpine
    networks: 
      - app_network
    restart: unless-stopped

volumes:
  chat_source_code:
    name: ${APP_VOLUME_1}
    driver: local
    driver_opts:
      type: none
      device: apps/chat/django/src
      o: bind

  chat_data:
    name: ${DB_VOLUME_1}
    driver: local
